name: Reusable workflow for demo applications

on:
  workflow_call:
    inputs:
      docker_org:
        required: true
        type: string
      docker_image:
        required: true
        type: string
      docker_file:
        required: true
        type: string
      docker_location:
        required: true
        type: string
      publish_next:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      dockerhub_username:
        required: true
      dockerhub_token:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create docker tags
        id: get_tags
        run: |
          echo "version_tag=${{ inputs.docker_org }}/${{ inputs.docker_image }}:${{ inputs.version }}" >> $GITHUB_OUTPUT
          echo "next_sha_tag=${{ inputs.docker_org }}/${{ inputs.docker_image }}:${{ inputs.version }}.$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "next_tag_for_release=${{ inputs.docker_org }}/${{ inputs.docker_image }}:${{ inputs.version }}-next" >> $GITHUB_OUTPUT
          echo "latest_tag=${{ inputs.docker_org }}/${{ inputs.docker_image }}:latest" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t ${{ steps.get_tags.outputs.version_tag }} -f ${{ inputs.docker_file }} ${{ inputs.docker_location }}

      - name: Login to DockerHub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.dockerhub_username }}
          password: ${{ secrets.dockerhub_token }}

      # Push version and SHA tag (for next versions)
      - name: Push version and SHA tag
        if: inputs.publish_next == 'true'
        run: |
          docker push ${{ steps.get_tags.outputs.version_tag }}
          docker tag ${{ steps.get_tags.outputs.version_tag }} ${{ steps.get_tags.outputs.next_sha_tag }}
          docker push ${{ steps.get_tags.outputs.next_sha_tag }}

      # Push version, next and latest tag for releases (for valid semver versions)
      - name: Push version and latest tag
        if: inputs.publish_next == 'false'
        run: |
          docker push ${{ steps.get_tags.outputs.version_tag }}
          docker tag ${{ steps.get_tags.outputs.version_tag }} ${{ steps.get_tags.outputs.latest_tag }}
          docker push ${{ steps.get_tags.outputs.latest_tag }}
          docker tag ${{ steps.get_tags.outputs.version_tag }} ${{ steps.get_tags.outputs.next_tag_for_release }} 
          docker push ${{ steps.get_tags.outputs.next_tag_for_release }}
